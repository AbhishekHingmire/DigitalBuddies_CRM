@model PgManagerApp.Models.TaskDetails

<style>
    .kanban-board {
        display: flex;
        gap: 1rem;
    }

    .kanban-column {
        width: 32%;
        padding: 1rem;
        border-radius: 8px;
        background: #fff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .task-card {
        background-color: #e0e0e0;
        padding: 1rem;
        border-radius: 8px;
        cursor: pointer;
        margin-bottom: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .kanban-header {
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .create-task-btn {
        top: 20px;
        right: 20px;
    }

    .media-container img,
    .media-container video {
        max-width: 100%;
        margin-top: 10px;
    }
</style>

<!-- Begin Page Content -->
<div class="container mt-4">
    <div class="container mt-4 d-flex justify-content-between align-items-center">
        <h2 class="text-center mb-0">Task Board</h2>
        <button class="btn btn-primary create-task-btn" data-bs-toggle="modal" data-bs-target="#newTaskModal">
            <i class="fas fa-plus"></i> Create Task
        </button>
    </div>
    <br />
    <div class="kanban-board">
        <div class="kanban-column" id="todo">
            <div class="kanban-header">To Do</div>
            @foreach (var task in Model.Tasks.Where(t => t.Status == "todo"))
            {
                var id2 = task.Id;
                <div class="task-card" data-id="@task.Id"
                     data-ids = "@id2"
                     data-description="@task.TaskDescription"
                     data-status="@task.Status"
                     data-priority="@task.Priority"
                     data-project-name="@task.ProjectId"
                     data-assigned-by="@task.AssignedBy"
                     data-assigned-to="@task.AssignedToId"
                     data-start-date="@task.StartDate.ToString("yyyy-MM-dd")"
                     data-end-date="@task.EndDate.ToString("yyyy-MM-dd")"
                     data-comments="@task.Comments"
                     data-media-description="@task.MediaDescription"
                     data-upload-image="@task.UploadImage"
                     data-upload-video="@task.UploadVideo"
                     data-bs-toggle="modal" data-bs-target="#taskDetailsModal">
                    @task.TaskDescription
                </div>
            }
        </div>
        <div class="kanban-column" id="inprogress">
            <div class="kanban-header">In Progress</div>
            @foreach (var task in Model.Tasks.Where(t => t.Status == "inprogress"))
            {
                var id2 = task.Id;
                <div class="task-card" data-id="@task.Id"
                     data-ids="@id2"
                     data-description="@task.TaskDescription"
                     data-status="@task.Status"
                     data-priority="@task.Priority"
                     data-project-name="@task.ProjectId"
                     data-assigned-by="@task.AssignedBy"
                     data-assigned-to="@task.AssignedToId"
                     data-start-date="@task.StartDate.ToString("yyyy-MM-dd")"
                     data-end-date="@task.EndDate.ToString("yyyy-MM-dd")"
                     data-comments="@task.Comments"
                     data-media-description="@task.MediaDescription"
                     data-upload-image="@task.UploadImage"
                     data-upload-video="@task.UploadVideo"
                     data-bs-toggle="modal" data-bs-target="#taskDetailsModal">
                    @task.TaskDescription
                </div>
            }
        </div>
        <div class="kanban-column" id="complete">
            <div class="kanban-header">Complete</div>
            @foreach (var task in Model.Tasks.Where(t => t.Status == "complete"))
            {
                var id2 = task.Id;
                <div class="task-card" data-id="@task.Id"
                     data-ids="@id2"
                     data-description="@task.TaskDescription"
                     data-status="@task.Status"
                     data-priority="@task.Priority"
                     data-project-name="@task.ProjectId"
                     data-assigned-by="@task.AssignedBy"
                     data-assigned-to="@task.AssignedToId"
                     data-start-date="@task.StartDate.ToString("yyyy-MM-dd")"
                     data-end-date="@task.EndDate.ToString("yyyy-MM-dd")"
                     data-comments="@task.Comments"
                     data-media-description="@task.MediaDescription"
                     data-upload-image="@task.UploadImage"
                     data-upload-video="@task.UploadVideo"
                     data-bs-toggle="modal" data-bs-target="#taskDetailsModal">
                    @task.TaskDescription
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal for Creating New Task -->
<div class="modal fade" id="newTaskModal" tabindex="-1" aria-labelledby="newTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newTaskModalLabel">Create New Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newTaskForm" asp-action="CreateTask" enctype="multipart/form-data" method="post">
                    <div class="mb-3">
                        <label for="projectSelect" class="form-label">Project Name</label>
                        <select class="form-select" id="projectSelect" name="ProjectId" asp-for="ProjectId" required>
                            <option value="" disabled selected>Select a project</option>
                            @foreach (var proj in ViewBag.Projects)
                            {
                                <option value="@proj.Id">@proj.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="assignedByInput" class="form-label">Assigned By</label>
                        <input type="text" class="form-control" id="assignedByInput" name="AssignedBy" asp-for="AssignedBy" placeholder="Enter your name" required>
                    </div>
                    <div class="mb-3">
                        <label for="assignedToSelect" class="form-label">Assigned To (Name and Designation)</label>
                        <select class="form-select" id="assignedToSelect" name="AssignedToId" asp-for="AssignedToId" required>
                            <option value="" disabled selected>Select a user</option>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.UserId">@user.Name (@user.Designation)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="taskDescriptionInput" class="form-label">Task Description</label>
                        <textarea class="form-control" id="taskDescriptionInput" name="TaskDescription" asp-for="TaskDescription" rows="3" placeholder="Enter task description" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="uploadImageInput" class="form-label">Upload Image</label>
                        <input type="file" class="form-control" id="uploadImageInput" asp-for="@Model.UploadImageFile" accept="image/*">
                    </div>
                    <div class="mb-3">
                        <label for="uploadVideoInput" class="form-label">Upload Video</label>
                        <input type="file" class="form-control" id="uploadVideoInput" asp-for="@Model.UploadVideoFile" accept="video/*">
                    </div>
                    <div class="mb-3">
                        <label for="mediaDescriptionInput" class="form-label">Media Description</label>
                        <textarea class="form-control" id="mediaDescriptionInput" name="MediaDescription" rows="2" placeholder="Enter description for uploaded media (optional)"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="prioritySelect" class="form-label">Select Priority</label>
                        <select class="form-select" id="prioritySelect" name="Priority" asp-for="Priority" required>
                            <option value="" disabled selected>Select priority</option>
                            <option value="high">High</option>
                            <option value="medium">Medium</option>
                            <option value="low">Low</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="statusSelect" class="form-label">Select Status</label>
                        <select class="form-select" id="statusSelect" name="Status" asp-for="Status" required>
                            <option value="" disabled selected>Select status</option>
                            <option value="todo">To Do</option>
                            <option value="inprogress">In Progress</option>
                            <option value="complete">Complete</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="startDateInput" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDateInput" name="StartDate" asp-for="StartDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDateInput" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDateInput" name="EndDate" asp-for="EndDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="commentsInput" class="form-label">Comments/Summary/Reference</label>
                        <textarea class="form-control" id="commentsInput" name="Comments" asp-for="Comments" rows="3" placeholder="Enter comments or references"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Task</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Viewing Task Details -->
<div class="modal fade" id="taskDetailsModal" tabindex="-1" aria-labelledby="taskDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="taskDetailsModalLabel">Task Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (!ViewBag.IsEmployee)
                {
                    <form asp-action="DeleteTask" method="post" style="display:inline;align-items:flex-end;display:flex;">
                        <input type="hidden" id="taskId2" name="Id" />
                        <button type="submit" class="btn btn-danger ms-auto">Delete Task</button>
                    </form>
                }
                <form id="taskDetailsForm" asp-action="UpdateTask" enctype="multipart/form-data" method="post">
                    <input type="hidden" id="taskId" name="Id" />
                    <div class="mb-3">
                        <label for="taskDescription" class="form-label">Task Description</label>
                        <textarea class="form-control" id="taskDescription" name="TaskDescription" rows="3" required
                        @(ViewBag.IsEmployee ? "disabled" : "")></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="status" class="form-label">Status</label>
                        <select class="form-select" id="status" name="Status" required>
                            <option value="todo">To Do</option>
                            <option value="inprogress">In Progress</option>
                            <option value="complete">Complete</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="priority" class="form-label">Priority</label>
                        <select class="form-select" id="priority" name="Priority" required
                        @(ViewBag.IsEmployee ? "disabled" : "")>
                            <option value="high">High</option>
                            <option value="medium">Medium</option>
                            <option value="low">Low</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="assignedBy" class="form-label">Assigned By</label>
                        <input class="form-control" id="assignedBy" name="assignedBy" required
                        @(ViewBag.IsEmployee ? "disabled" : "") />
                    </div>
                    <div class="mb-3">
                        <label for="assignedTo" class="form-label">Assigned To</label>
                        <select class="form-select" id="assignedTo" name="AssignedToId" required @(ViewBag.IsEmployee ? "disabled" : "")>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.UserId">@user.Name</option>
                            }
                        </select>
                    </div>


                    <div class="row mb-3">
                        <div class="col">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input class="form-control" id="startDate" name="StartDate" required
                            @(ViewBag.IsEmployee ? "disabled" : "") />
                        </div>
                        <div class="col">
                            <label for="endDate" class="form-label">End Date</label>
                            <input class="form-control" id="endDate" name="EndDate" required
                            @(ViewBag.IsEmployee ? "disabled" : "") />
                        </div>
                    </div>

                    <div class="mb-3 media-container">
                        <label class="form-label">Uploaded Image</label>
                        <div id="uploadedImageContainer">
                            <span id="uploadedImageLink">No image uploaded</span>
                        </div>
                    </div>
                    <div class="mb-3 media-container">
                        <label class="form-label">Uploaded Video</label>
                        <div id="uploadedVideoContainer">
                            <span id="uploadedVideoLink">No video uploaded</span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Update Task</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const taskCards = document.querySelectorAll('.task-card');
        taskCards.forEach(card => {
            card.addEventListener('click', function () {
                const taskId = this.getAttribute('data-id');
                const taskId2 = this.getAttribute('data-ids');
                debugger;
                const taskDescription = this.getAttribute('data-description');
                const taskStatus = this.getAttribute('data-status');
                const taskPriority = this.getAttribute('data-priority') || 'medium';
                const projectName = this.getAttribute('data-project-name');
                const assignedBy = this.getAttribute('data-assigned-by');
                const assignedTo = this.getAttribute('data-assigned-to');
                const startDate = this.getAttribute('data-start-date');
                const endDate = this.getAttribute('data-end-date');
                const comments = this.getAttribute('data-comments');
                const mediaDescription = this.getAttribute('data-media-description');
                const uploadedImage = this.getAttribute('data-upload-image');
                const uploadedVideo = this.getAttribute('data-upload-video');

                document.getElementById('taskId').value = taskId;
                document.getElementById('taskDescription').value = taskDescription;
                document.getElementById('status').value = taskStatus;
                document.getElementById('priority').value = taskPriority;
                document.getElementById('assignedBy').value = assignedBy;
                document.getElementById('startDate').value = startDate;
                document.getElementById('endDate').value = endDate;
                document.getElementById('assignedTo').value = assignedTo;

                const imageContainer = document.getElementById('uploadedImageLink');
                if (uploadedImage) {
                    imageContainer.innerHTML = `<img src="/uploads/${uploadedImage}" alt="Uploaded Image">`;
                } else {
                    imageContainer.textContent = "No image uploaded";
                }

                const videoContainer = document.getElementById('uploadedVideoLink');
                if (uploadedVideo) {
                    videoContainer.innerHTML = `<video controls>
                                                      <source src="/uploads/${uploadedVideo}" type="video/mp4">
                                                      Your browser does not support the video tag.
                                                  </video>`;
                } else {
                    videoContainer.textContent = "No video uploaded";
                }

                var modal = new bootstrap.Modal(document.getElementById('taskDetailsModal'));

                document.getElementById('taskId2').value = taskId2;

                modal.show();
            });
        });
    });

    var taskDetailsModal = document.getElementById('taskDetailsModal');
    taskDetailsModal.addEventListener('hidden.bs.modal', function (event) {
        location.reload(); // Refresh the page
    });
</script>
