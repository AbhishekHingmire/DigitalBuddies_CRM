@model IEnumerable<PgManagerApp.Models.CalendarEvent>

@{
    string userId = Context.Request.Cookies["UserId"];
    bool isEmployee = false;

    if (userId != null)
    {
        isEmployee = userId.ToUpper().Contains("EMP");
    }
}
<div class="container mt-5 mb-3">
    <h2 class="text-center" id="currentMonth"></h2>
    <div class="container-fluid">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="d-flex justify-content-center" id="daysOfWeek">
                        <div class="day-header">Sun</div>
                        <div class="day-header">Mon</div>
                        <div class="day-header">Tue</div>
                        <div class="day-header">Wed</div>
                        <div class="day-header">Thu</div>
                        <div class="day-header">Fri</div>
                        <div class="day-header">Sat</div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="row" id="calendarDays"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Adding/Updating Events -->
@if (!isEmployee)
{
    <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Add Event</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="eventForm">
                        <div class="form-group">
                            <label for="eventTitle">Event Title</label>
                            <input type="text" class="form-control" id="eventTitle" required>
                        </div>
                        <input type="hidden" id="eventDate">
                        <input type="hidden" id="eventId">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="deleteEvent" style="display: none;">Delete Event</button>
                    <button type="button" class="btn btn-primary" id="saveEvent">Save Event</button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Include jQuery, Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        const date = new Date();
        const currentMonth = date.toLocaleString('default', { month: 'long' });
        const year = date.getFullYear();
        const today = date.getDate();

        $('#currentMonth').text(`${currentMonth} ${year}`);
        const firstDay = new Date(year, date.getMonth(), 1).getDay();
        const daysInMonth = new Date(year, date.getMonth() + 1, 0).getDate();

        const events = @Html.Raw(Json.Serialize(Model)); // Make sure Model is a collection of CalendarEvent objects
        console.log(events);

        let calendarDaysHtml = '';
        for (let i = 0; i < firstDay; i++) {
            calendarDaysHtml += '<div class="col-1"></div>';
        }
        for (let day = 1; day <= daysInMonth; day++) {
            const dayClass = (new Date(year, date.getMonth(), day).getDay() === 0) ? 'sunday' : '';
            const currentClass = (day === today) ? 'current-date' : '';

            // Check if there are any events for this day and display them
            const event = events.find(e => new Date(e.date).getDate() === day && new Date(e.date).getMonth() === date.getMonth() && new Date(e.date).getFullYear() === year);
            const eventHtml = event ? `<br><span style="color: blue;">${event.eventName}</span>` : '';

            calendarDaysHtml += `<div class="col-1">
                                        <button class="btn calendar-btn ${dayClass} ${currentClass}" onclick="openEventModal('${day}', ${event ? event.id : 'null'})">${day}${eventHtml}</button>
                                      </div>`;
        }
        $('#calendarDays').html(calendarDaysHtml);

        // Save event when save button is clicked
        $('#saveEvent').click(function () {
            const title = $('#eventTitle').val();
            const day = $('#eventDate').val();
            const eventId = $('#eventId').val();

            if (!title || !day) {
                alert('Please fill in all fields.');
                return;
            }

            const eventData = {
                EventName: title,
                Date: new Date(year, date.getMonth(), day).toISOString().split('T')[0],
                Id: eventId ? parseInt(eventId) : 0
            };

            $.ajax({
                type: 'POST',
                url: '/Calendar/AddEvent',
                data: JSON.stringify(eventData),
                contentType: 'application/json',
                success: function () {
                    const eventButton = $(`button:contains(${day})`);
                    eventButton.html(`${day}<br><span style="color: blue;">${title}</span>`).css('background-color', 'white');
                    $('#eventModal').modal('hide');
                    $('#eventForm')[0].reset();
                    alert('Event added successfully.');
                    location.reload(); // This will refresh the page
                },
                error: function (xhr) {
                    alert('Error adding/updating event: ' + xhr.responseText);
                }
            });
        });

        // Function to open the event modal
        window.openEventModal = function (day, eventId) {
            $('#eventDate').val(day);
            $('#eventId').val(eventId);
            if (eventId) {
                const event = events.find(e => e.id === eventId);
                $('#eventTitle').val(event.eventName);
                $('#eventModalLabel').text('Update Event');
                $('#deleteEvent').show();
            } else {
                $('#eventModalLabel').text('Add Event');
                $('#eventTitle').val('');
                $('#deleteEvent').hide();
            }
            $('#eventModal').modal('show');
        };

        // Handle the delete event functionality
        // Handle the delete event functionality
        $('#deleteEvent').click(function () {
            const eventId = $('#eventId').val();

            if (!eventId) {
                alert('No event selected for deletion.');
                return;
            }

            if (confirm('Are you sure you want to delete this event?')) {
                $.ajax({
                    type: 'DELETE',
                    url: `/Calendar/DeleteEvent/${eventId}`,
                    success: function () {
                        // Refresh the page after successful deletion
                        alert('Event deleted successfully.');
                        location.reload(); // This will refresh the page
                    },
                    error: function (xhr) {
                        alert('Error deleting event: ' + xhr.responseText);
                    }
                });
            }
        });

    });
</script>

<style>
    #daysOfWeek {
        margin-bottom: 10px;
    }

    .day-header {
        flex: 1;
        text-align: center;
        font-weight: bold;
        color: #fff;
        background-color: #007bff;
        padding: 10px;
        border-radius: 5px;
        margin: 0;
    }

    #calendarDays {
        display: flex;
        flex-wrap: wrap;
        border-radius: 5px;
    }

    .col-1 {
        flex: 0 0 14.28%;
        text-align: center;
        padding: 0;
    }

    .calendar-btn {
        width: 100%;
        height: 80px;
        border-radius: 0;
        border: 1px solid #ddd;
        transition: background-color 0.3s;
        background-color: white;
    }

        .calendar-btn:hover {
            background-color: #f0f0f0;
        }

    .sunday {
        color: red;
    }

    .current-date {
        background-color: lightgray;
    }
</style>
