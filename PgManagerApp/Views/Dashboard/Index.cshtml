@using System.Text.Json
@model PgManagerApp.Models.DashboardViewModel

<style>
    /* Ensure the chart container is scrollable */
    .scrollable-container {
        overflow-x: auto;
        white-space: nowrap;
    }

    /* Optional: style the chart container for better presentation */
    #chartContainer {
        display: inline-block;
    }

    body {
        background-color: #f8f9fa;
    }

    .timer-card {
        max-width: 400px;
        margin: auto;
        padding: 20px;
        background-color: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .timer {
        font-size: 3rem;
        margin-bottom: 20px;
        color: #007bff;
    }

    .btn-custom {
        background-color: #007bff;
        color: white;
    }

        .btn-custom:hover {
            background-color: #0056b3;
        }

    .log-time {
        background-color: #e9ecef;
        padding: 8px;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .timer-title {
        font-size: 1.5rem; /* Increase font size */
        font-weight: bold; /* Bold text */
        color: #007bff; /* Change to your desired color */
        margin-bottom: 1rem; /* Spacing below the title */
    }
</style>

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Dashboard Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800 m-1">Dashboard</h1>
        <a href="#" id="downloadPdfBtn" class="d-sm-inline-block btn btn-sm m-1 btn-primary shadow-sm" data-toggle="modal"
           data-target="#downloadModal"><i class="fas fa-download mr-1 fa-md text-white-50"></i> Download Report</a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>@TempData["Success"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>@TempData["Error"]</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Download Modal -->
    <div class="modal fade" id="downloadModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Download Report</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="startDate">Start Date*</label>
                        <input type="date" id="startDate" class="form-control">
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date*</label>
                        <input type="date" id="endDate" class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="confirmDownloadBtn" class="btn btn-sm btn-primary" disabled>
                        <i class="fas fa-download mr-1 fa-md text-white-50"></i> Download
                    </button>
                </div>
            </div>
        </div>
    </div>




    <!-- Content Row -->
    <div class="downloadReport">
    <div class="row d-fleex justify-content-center align-items-center ">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-4 col-sm-6 mt-2">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs  text-primary text-uppercase mb-1">
                                Total Employees
                            </div>
                            <div class="h5 mb-0  text-gray-800">@Model.TotalUsers</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-4 col-sm-6 mt-2">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs  text-success text-uppercase mb-1">
                                Total Tasks
                            </div>
                            <div class="h5 mb-0  text-gray-800">@Model.TotalTasks</div>
                        </div>
                        <div class="col-auto">
                                <i class="fas fa-hourglass-half fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-4 col-sm-6 mt-2">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs  text-danger text-uppercase mb-1">
                               Total Projects
                            </div>
                            <div class="h5 mb-0  text-gray-800">@Model.TotalProjects</div>
                        </div>
                        <div class="col-auto">
                                <i class="fas fa-project-diagram fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-4 col-sm-6 mt-2">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs  text-success text-uppercase mb-1">
                                Holiday List
                            </div>
                            <div class="h5 mb-0  text-gray-800">@Model.TotalHolidays</div>
                        </div>
                        <div class="col-auto">
                                <i class="fas fa-calendar fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            @if(!Model.IsEmployee == true)
            {
                <!-- First Card: Create Designation -->
                <div class="col-xl-4 col-md-6 col-sm-12 mt-3">
                    <div class="card border-left-primary shadow h-100 py-4">
                        <div class="card-body">
                            <div class="row no-gutters align-items-center">
                                <div class="col mr-3">
                                    <div class="text-xs  text-primary text-uppercase mb-3">
                                        Create Designation
                                    </div>
                                    <form asp-action="AddDesignation" method="post">
                                        <input type="text" class="form-control h5  text-gray-800 mb-3" name="designationName" placeholder="Enter Designation Name" required>
                                        <button class="btn btn-primary w-100">Add</button>
                                    </form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Second Card: Create Projects -->
                <div class="col-xl-4 col-md-6 col-sm-12 mt-3">
                    <div class="card border-left-warning shadow h-100 py-4">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-3">
                                <div class="text-xs text-warning text-uppercase mb-3">
                                    Create Projects
                                </div>
                                <form asp-action="AddProject" method="post">
                                    <input type="text" class="form-control h5  text-gray-800 mb-3" name="projectName" placeholder="Enter Project Name" required>
                                    <button class="btn btn-warning w-100" type="submit">Add</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }

    </div>
        @if (Model.IsEmployee == true)
        {
            <div class="container-fluid mt-5">
                <div class="row justify-content-start">

                    <!-- Timer Card -->
                    <div class="col-md-4 mt-2">
                        @if (Model.IsCheckedIn == true)
                        {
                            <div class="card timer-card" style="cursor: pointer;" onclick="handleTimerClick()">
                                <div class="card-body text-center">
                                    <h4 class="text-success mb-3" style="font-weight: bold; color: #007bff;">Timer</h4>
                                    <div class="timer" id="timer">00:00:00</div>
                                    <button class="btn btn-custom" id="startBtn">Start</button>
                                    <button class="btn btn-danger" id="endBtn">End</button>
                                    <div id="totalTime" class="mt-3"></div>
                                    <div id="checkInOut" class="mt-3"></div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="card timer-card" style="cursor: not-allowed;">
                                <div class="card-body text-center">
                                    <h4 class="text-muted mb-3" style="font-weight: bold;">Timer (Inactive)</h4>
                                    <div class="timer" id="timer">00:00:00</div>
                                    <button class="btn btn-custom" id="startBtn" disabled>Start</button>
                                    <button class="btn btn-danger" id="endBtn" disabled>End</button>
                                    <div id="totalTime" class="mt-3"></div>
                                    <div id="checkInOut" class="mt-3"></div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Employee Table Card -->
                    <div class="table-responsive col-md-8 mt-2 pt-2 shadow" style="max-height: 400px;">
                        <table class="table table-bordered table-striped">
                            @if (Model.Users != null && Model.Users.Any())
                            {
                                <thead>
                                    <tr>
                                        <th class="bg-primary text-white">Emp ID</th>
                                        <th class="bg-primary text-white">Emp Name</th>
                                        <th class="bg-primary text-white">Emp Designation</th>
                                    </tr>
                                </thead>
                                <tbody id="employeeTableBody">
                                    @foreach (var emp in Model.Users)
                                    {
                                        <tr>
                                            <td>@emp.UserId</td>
                                            <td>@emp.Name</td>
                                            <td>@emp.Designation</td>
                                        </tr>
                                    }
                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td colspan="3" class="text-center"><strong>No data to show!</strong></td>
                                    </tr>
                                </tbody>
                            }
                        </table>
                    </div>

                    <!-- Modal -->
                    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="logoutModalLabel">Session Logout</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    Do you want to logout this session?
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-danger" id="confirmLogout">Logout</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        }

</div>
<!-- End Page Content -->

    <script>
        let timerInterval;
        let startTime;
        let endTime;

        // Function to get the current time in IST
        function getISTTime() {
            const utcDate = new Date();
            // Calculate the offset for IST (UTC+5:30)
            const istOffset = 5.5 * 60 * 60 * 1000; // 5 hours and 30 minutes in milliseconds
            return new Date(utcDate.getTime() + istOffset);
        }

        $('#startBtn').click(function () {
            startTime = getISTTime(); // Get current time in IST
            $('#timer').text("00:00:00"); // Reset timer display
            $('#checkInOut').text("Timer started...");

            timerInterval = setInterval(function () {
                const elapsedTime = getISTTime() - startTime; // Calculate elapsed time in IST
                const seconds = Math.floor((elapsedTime / 1000) % 60);
                const minutes = Math.floor((elapsedTime / 60000) % 60);
                const hours = Math.floor((elapsedTime / 3600000));

                // Format the timer display as HH:mm:ss
                $('#timer').text(`${pad(hours)}:${pad(minutes)}:${pad(seconds)}`);
            }, 1000);
        });

        $('#endBtn').click(function () {
            clearInterval(timerInterval);
            endTime = getISTTime(); // Get end time in IST
            $('#checkInOut').text("Timer stopped...");

            const userTimerData = {
                UserId: '@Model.UserId', // Replace with actual user ID
                StartTime: startTime.toISOString(),
                EndTime: endTime.toISOString()
            };

            $.ajax({
                type: 'POST',
                url: '/Dashboard/SaveTimer',
                data: JSON.stringify(userTimerData),
                contentType: 'application/json',
                success: function () {
                    alert('Timer data saved successfully.');
                    // Calculate total elapsed time for display
                    const totalTime = Math.floor((endTime - startTime) / 1000);
                    $('#totalTime').text(`Total Time: ${pad(Math.floor(totalTime / 3600))}:${pad(Math.floor((totalTime % 3600) / 60))}:${pad(totalTime % 60)}`);
                },
                error: function (xhr, status, error) {
                    alert('Error saving timer: ' + xhr.responseText);
                }
            });
        });

        function pad(number) {
            return number < 10 ? '0' + number : number;
        }
    </script>
